{"remainingRequest":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\src\\views\\BlogEdit.vue?vue&type=style&index=0&id=25b085f4&scoped=true&lang=css&","dependencies":[{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\src\\views\\BlogEdit.vue","mtime":1603170809000},{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663205929046},{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663205928561},{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1663205924452},{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663205928442},{"path":"F:\\HCIP\\项目\\gitHub上的学习项目\\vueblog-master\\vueblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1663205922532}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tLWNvbnRlbnQgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["BlogEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA","file":"BlogEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <Header></Header>\n\n    <div class=\"m-content\">\n\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"ruleForm.title\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"摘要\" prop=\"description\">\n          <el-input type=\"textarea\" v-model=\"ruleForm.description\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"内容\" prop=\"content\">\n          <mavon-editor v-model=\"ruleForm.content\"></mavon-editor>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n        </el-form-item>\n      </el-form>\n\n    </div>\n\n\n\n  </div>\n</template>\n\n<script>\n  import Header from \"../components/Header\";\n  export default {\n    name: \"BlogEdit.vue\",\n    components: {Header},\n    data() {\n      return {\n        ruleForm: {\n          id: '',\n          title: '',\n          description: '',\n          content: ''\n        },\n        rules: {\n          title: [\n            { required: true, message: '请输入标题', trigger: 'blur' },\n            { min: 3, max: 25, message: '长度在 3 到 25 个字符', trigger: 'blur' }\n          ],\n          description: [\n            { required: true, message: '请输入摘要', trigger: 'blur' }\n          ],\n          content: [\n            { trequired: true, message: '请输入内容', trigger: 'blur' }\n          ]\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n\n            const _this = this\n            this.$axios.post('/blog/edit', this.ruleForm, {\n              headers: {\n                \"Authorization\": localStorage.getItem(\"token\")\n              }\n            }).then(res => {\n              console.log(res)\n              _this.$alert('操作成功', '提示', {\n                confirmButtonText: '确定',\n                callback: action => {\n                  _this.$router.push(\"/blogs\")\n                }\n              });\n\n            })\n\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    },\n    created() {\n      const blogId = this.$route.params.blogId\n      console.log(blogId)\n      const _this = this\n      if(blogId) {\n        this.$axios.get('/blog/' + blogId).then(res => {\n          const blog = res.data.data\n          _this.ruleForm.id = blog.id\n          _this.ruleForm.title = blog.title\n          _this.ruleForm.description = blog.description\n          _this.ruleForm.content = blog.content\n        })\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n  .m-content {\n    text-align: center;\n  }\n</style>"]}]}